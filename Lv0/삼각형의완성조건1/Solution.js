function solution(sides) {
    let answer = 0;
    sides.sort((a,b) => a - b)
    // 가장 긴 변이 다른 두 변의 합보다 작은지 확인

    /*array.sort() 메서드는 자바스크립트에서 배열을 정렬하는 데 사용됩니다. 하지만 기본적으로 sort()는 배열의 요소를 문자열로 변환하여 정렬합니다. 이로 인해 숫자 배열을 정렬할 때 예상치 못한 결과가 나올 수 있습니다. 예를 들어, ["10", "2", "30"]과 같은 배열은 ["10", "2", "30"] 대신 ["2", "10", "30"]처럼 문자열 순서대로 정렬됩니다.

따라서 숫자 배열을 올바르게 오름차순으로 정렬하려면 sort() 메서드에 비교 함수를 전달해야 합니다.

비교 함수 설명
javascript
코드 복사
sides.sort((a, b) => a - b);
이 구문에서 a와 b는 배열의 인접한 두 요소를 나타냅니다. a - b의 결과에 따라 두 요소의 위치가 결정됩니다:

a - b < 0 (즉, a가 b보다 작으면) → a는 b보다 앞에 오게 됩니다.
a - b > 0 (즉, a가 b보다 크면) → b는 a보다 앞에 오게 됩니다.
a - b === 0 (즉, a와 b가 같으면) → a와 b는 순서가 바뀌지 않습니다.
작동 방식
오름차순 정렬: a - b가 양수일 때 b가 앞에 오고, 음수일 때 a가 앞에 오므로, 배열이 오름차순으로 정렬됩니다.
내림차순 정렬: 내림차순으로 정렬하려면 b - a를 사용합니다.
*/
    if (sides[0] + sides[1] > sides[2]) {
        answer=  1;  // 삼각형을 만들 수 있음
    } else {
        answer =  2;  // 삼각형을 만들 수 없음
    }
    return answer;
}